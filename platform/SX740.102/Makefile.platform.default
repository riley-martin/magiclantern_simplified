# PowerShot SX740 HS 1.0.2

#CANON_NAME_FIR  = SX740HS102.FIR
FIRMWARE_ID     = 0x00000801 # not sure yet
ROMBASEADDR     = 0xE0040000

# We can get space for ML both by shrinking Canon's "user_mem" malloc heap
# by changing its end address, and by moving the sys_mem and sys_objs regions
# upwards; creating a gap in the middle.
#
# Some info is available from drysh from "meminfo -m" and "memmap commands",
# but the best source is to look at the struct in "cstart" ROM function:
# (reordered for easier reading, left only memory config parts)
#
# c.user_mem_start = 0xde520;
# c.user_mem_size  = 0x114894;
# c.sys_objs_start = 0x1f2db4;   // == user_mem_start + user_mem_size
# c.sys_objs_end   = 0x1fc320;   // pointer, not size
# c.sys_mem_start  = 0x1fc320;   // == sys_objs_end
# c.sys_mem_size   = 0xe2200;
#
# boot-d678.c adjusts these constants before Magic Lantern starts, to give us
# some room in the memory.
#
# Presumably, if too much mem is stolen from user_mem, or sys region
# is moved too far upwards, Bad Things happen. So far on Digic 8 we try not to
# touch anything except user_mem.
#
# We could calculate RESTARTSTART at runtime, but the build system currently
# needs a value for it, I believe because magiclantern binary is not PIC.
#
# Consequently, you need to work this out, and you need to ensure it's
# compatible with the limits defined in consts.h, see ML_MAX_* and
# ML_RESERVED_MEM.  This is a sensible default:
# *sys_objs_start - <at least size of binary but not more than ML_RESERVED_MEM>
#
# It's a sensible precaution to pick a value that's well aligned,
# we run code from this address.
RESTARTSTART    = 0x001AADC0

# Cortex A9, binaries loaded as Thumb
CFLAG_USER = -mthumb -mlong-calls
PLATFORM_ARCH = armv7-a

# these should be removed when porting starts
#ifeq ($(ML_SRC_PROFILE),generic)
#ML_SRC_PROFILE  = minimal
#ML_MINIMAL_OBJ  = minimal-d78.o
#endif

ML_BOOT_OBJ     = boot-d678.o
ML_SRC_EXTRA_OBJS += function_overrides.o  test_features.o
